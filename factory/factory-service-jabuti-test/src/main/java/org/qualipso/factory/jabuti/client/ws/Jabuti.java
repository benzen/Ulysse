
package org.qualipso.factory.jabuti.client.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "jabuti", targetNamespace = "http://org.qualipso.factory.ws/service/jabuti")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Jabuti {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws ClassNotFoundFault_Exception
     * @throws OperationSequenceFault_Exception
     * @throws InvalidFileFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String addTestCases(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        byte[] arg3)
        throws ClassNotFoundFault_Exception, InvalidFileFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String cleanProject(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws JabutiServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "projectId", partName = "projectId")
    public String createProject(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2)
        throws JabutiServiceException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String deleteProject(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.FactoryResource
     * @throws AccessDeniedException_Exception
     * @throws PathNotFoundException_Exception
     * @throws InvalidPathException_Exception
     * @throws FactoryException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FactoryResource findResource(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws AccessDeniedException_Exception, FactoryException_Exception, InvalidPathException_Exception, PathNotFoundException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.MethodDetailsArray
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "methodCoverage", partName = "methodCoverage")
    public MethodDetailsArray getAllCoveredAndUncoveredRequiredElements(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.RequiredElementsDetailsArray
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "requiredElementsDetails", partName = "requiredElementsDetails")
    public RequiredElementsDetailsArray getAllRequiredElements(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.CoverageDetailsArray
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public CoverageDetailsArray getCoverageByClasses(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.CoverageCriterionDetailsArray
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "criteria", partName = "criteria")
    public CoverageCriterionDetailsArray getCoverageByCriteria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.CoverageDetailsArray
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "methodCoverage", partName = "methodCoverage")
    public CoverageDetailsArray getCoverageByMethods(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.InstrumentedProjectDetails
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "instrumentedProjectDetails", partName = "instrumentedProjectDetails")
    public InstrumentedProjectDetails getInstrumentedProject(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.MethodArray
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws InvalidCriterionFault_Exception
     * @throws OperationSequenceFault_Exception
     */
    @WebMethod
    @WebResult(name = "methods", partName = "methods")
    public MethodArray getRequiredElementsByCriterion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws InvalidCriterionFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @return
     *     returns org.qualipso.factory.jabuti.client.ws.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getResourceTypeList();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getServiceName();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws ClassNotFoundFault_Exception
     * @throws InvalidExpressionFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String ignoreClasses(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        StringArray arg2)
        throws ClassNotFoundFault_Exception, InvalidExpressionFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws ClassNotFoundFault_Exception
     * @throws InvalidExpressionFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String selectClassesToInstrument(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        StringArray arg2)
        throws ClassNotFoundFault_Exception, InvalidExpressionFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws JabutiServiceException_Exception
     * @throws InvalidProjectIdFault_Exception
     * @throws OperationSequenceFault_Exception
     * @throws InvalidFileFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String sendTraceFile(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2)
        throws InvalidFileFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception, OperationSequenceFault_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws InvalidProjectIdFault_Exception
     * @throws JabutiServiceException_Exception
     * @throws InvalidFileFault_Exception
     */
    @WebMethod
    @WebResult(name = "message", partName = "message")
    public String updateProject(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        byte[] arg2)
        throws InvalidFileFault_Exception, InvalidProjectIdFault_Exception, JabutiServiceException_Exception
    ;

}
