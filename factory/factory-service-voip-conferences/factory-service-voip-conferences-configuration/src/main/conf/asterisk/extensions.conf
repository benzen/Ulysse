[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
CONSOLE=Console/dsp				; Console interface for demo
IAXINFO=guest					; IAXtel username/password
TRUNK=Zap/G2					; Trunk interface

TRUNKMSD=1					; MSD digits to strip (usually 1 or 0)
TMP_BASE_PATH=/etc/asterisk

[dundi-e164-canonical]

[dundi-e164-customers]

[dundi-e164-via-pstn]

[dundi-e164-local]

include => dundi-e164-canonical
include => dundi-e164-customers
include => dundi-e164-via-pstn

[dundi-e164-switch]
switch => DUNDi/e164

[dundi-e164-lookup]

include => dundi-e164-local
include => dundi-e164-switch

[macro-dundi-e164]
exten => s,1,Goto(${ARG1},1)
include => dundi-e164-lookup

[iaxtel700]
exten => _91700XXXXXXX,1,Dial(IAX2/${GLOBAL(IAXINFO)}@iaxtel.com/${EXTEN:1}@iaxtel)

[iaxprovider]

[trunkint]
exten => _9011.,1,Macro(dundi-e164,${EXTEN:4})
exten => _9011.,n,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunkld]
exten => _91NXXNXXXXXX,1,Macro(dundi-e164,${EXTEN:1})
exten => _91NXXNXXXXXX,n,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunklocal]
exten => _9NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[trunktollfree]
exten => _91800NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91888NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91877NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})
exten => _91866NXXXXXX,1,Dial(${GLOBAL(TRUNK)}/${EXTEN:${GLOBAL(TRUNKMSD)}})

[international]
ignorepat => 9
include => longdistance
include => trunkint

[longdistance]
ignorepat => 9
include => local
include => trunkld

[local]
ignorepat => 9
include => default
include => trunklocal
include => iaxtel700
include => trunktollfree
include => iaxprovider

include => parkedcalls

[macro-trunkdial]
exten => s,1,Dial(${ARG1})
exten => s,n,Goto(s-${DIALSTATUS},1)
exten => s-NOANSWER,1,Hangup
exten => s-BUSY,1,Hangup
exten => _s-.,1,NoOp

[macro-stdexten];
exten => s,1,Dial(${ARG2},20)			; Ring the interface, 20 seconds maximum
exten => s,2,Goto(s-${DIALSTATUS},1)		; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => s-NOANSWER,1,Voicemail(${ARG1},u)	; If unavailable, send to voicemail w/ unavail announce
exten => s-NOANSWER,2,Goto(default,s,1)		; If they press #, return to start

exten => s-BUSY,1,Voicemail(${ARG1},b)		; If busy, send to voicemail w/ busy announce
exten => s-BUSY,2,Goto(default,s,1)		; If they press #, return to start

exten => _s-.,1,Goto(s-NOANSWER,1)		; Treat anything else as no answer

exten => a,1,VoicemailMain(${ARG1})		; If they press *, send the user into VoicemailMain

[macro-stdPrivacyexten];
exten => s,1,Dial(${ARG2},20|p)			; Ring the interface, 20 seconds maximum, call screening 
						; option (or use P for databased call screening)
exten => s,2,Goto(s-${DIALSTATUS},1)		; Jump based on status (NOANSWER,BUSY,CHANUNAVAIL,CONGESTION,ANSWER)

exten => s-NOANSWER,1,Voicemail(${ARG1},u)	; If unavailable, send to voicemail w/ unavail announce
exten => s-NOANSWER,2,Goto(default,s,1)		; If they press #, return to start

exten => s-BUSY,1,Voicemail(${ARG1},b)		; If busy, send to voicemail w/ busy announce
exten => s-BUSY,2,Goto(default,s,1)		; If they press #, return to start

exten => s-DONTCALL,1,Goto(${ARG3},s,1)		; Callee chose to send this call to a polite "Don't call again" script.

exten => s-TORTURE,1,Goto(${ARG4},s,1)		; Callee chose to send this call to a telemarketer torture script.

exten => _s-.,1,Goto(s-NOANSWER,1)		; Treat anything else as no answer

exten => a,1,VoicemailMain(${ARG1})		; If they press *, send the user into VoicemailMain

[macro-page];
exten => s,1,ChanIsAvail(${ARG1}|js)			; j is for Jump and s is for ANY call
exten => s,n,GoToIf([${AVAILSTATUS} = "1"]?autoanswer:fail)
exten => s,n(autoanswer),Set(_ALERT_INFO="RA")			; This is for the PolyComs
exten => s,n,SIPAddHeader(Call-Info: Answer-After=0)	; This is for the Grandstream, Snoms, and Others
exten => s,n,NoOp()					; Add others here and Post on the Wiki!!!!
exten => s,n,Dial(${ARG1}||)
exten => s,n(fail),Hangup


[demo]
exten => s,1,Wait(1)			; Wait a second, just for fun
exten => s,n,Answer			; Answer the line
exten => s,n,Set(TIMEOUT(digit)=5)	; Set Digit Timeout to 5 seconds
exten => s,n,Set(TIMEOUT(response)=10)	; Set Response Timeout to 10 seconds
exten => s,n(restart),BackGround(demo-congrats)	; Play a congratulatory message
exten => s,n(instruct),BackGround(demo-instruct)	; Play some instructions
exten => s,n,WaitExten			; Wait for an extension to be dialed.

exten => 2,1,BackGround(demo-moreinfo)	; Give some more information.
exten => 2,n,Goto(s,instruct)

exten => 3,1,Set(LANGUAGE()=fr)		; Set language to french
exten => 3,n,Goto(s,restart)		; Start with the congratulations

exten => 1000,1,Goto(default,s,1)
exten => 1234,1,Playback(transfer,skip)		; "Please hold while..." 
					; (but skip if channel is not up)
exten => 1234,n,Macro(stdexten,1234,${GLOBAL(CONSOLE)})

exten => 1235,1,Voicemail(1234,u)		; Right to voicemail

exten => 1236,1,Dial(Console/dsp)		; Ring forever
exten => 1236,n,Voicemail(1234,b)		; Unless busy

exten => #,1,Playback(demo-thanks)	; "Thanks for trying the demo"
exten => #,n,Hangup			; Hang them up.

exten => t,1,Goto(#,1)			; If they take too long, give up
exten => i,1,Playback(invalid)		; "That's not valid, try again"

exten => 500,1,Playback(demo-abouttotry); Let them know what's going on
exten => 500,n,Dial(IAX2/guest@pbx.digium.com/s@default)	; Call the Asterisk demo
exten => 500,n,Playback(demo-nogo)	; Couldn't connect to the demo site
exten => 500,n,Goto(s,6)		; Return to the start over message.

exten => 600,1,Playback(demo-echotest)	; Let them know what's going on
exten => 600,n,Echo			; Do the echo test
exten => 600,n,Playback(demo-echodone)	; Let them know it's over
exten => 600,n,Goto(s,6)		; Start over

exten => 76245,1,Macro(page,SIP/Grandstream1)
exten => _7XXX,1,Macro(page,SIP/${EXTEN})

exten => 7999,1,Set(TIMEOUT(absolute)=60)
exten => 7999,2,Page(Local/Grandstream1@page&Local/Xlite1@page&Local/1234@page/n|d)

exten => 8500,1,VoicemailMain
exten => 8500,n,Goto(s,6)

[page]
exten => _X.,1,Macro(page,SIP/${EXTEN})

[default]
include => demo

[macro-conference] 
exten => s,1,Noop,"Extension: "${MACRO_EXTEN}  
exten => s,n,Noop,"Main loop: "${mainloop} 
exten => s,n,Set,conf_confno=""
exten => s,n,Set,row="${REALTIME(meetme|confno|${MACRO_EXTEN})}"   

exten => s,n,Set,loop=1
exten => s,n(InfoLoop),Set,col_pair=${CUT(row|"|"|${loop})}
exten => s,n,Set,col_name=${CUT(col_pair|"="|1)}   
exten => s,n,Set,col_value=${CUT(col_pair|"="|2)}  
exten => s,n,Set,conf_${col_name}="${col_value}"   
exten => s,n,Noop,${conf_confno}   
exten => s,n,Set,loop=$[${loop}+1] 
exten => s,n,GotoIf,$["${CUT(row|"|"|${loop})}" != ""]?InfoLoop

;some fix - questions  
exten => s,n,Set,meetmeflags=${IF($["${conf_recorded}" == "1"]?"csTvM":"csTvM")}   

exten => s,n,Noop,"Current epoch: "${EPOCH}
exten => s,n,GotoIf,$["${conf_confno}" == ""]?NotExist 

exten => s,n,Set,MEETME_RECORDINGFORMAT="wav"  
exten => s,n,Set,MONITOR_EXEC="${GLOBAL(TMP_BASE_PATH)}/bin/2wav2ogg"  
exten => s,n,System,mkdir -p ${GLOBAL(TMP_BASE_PATH)}/recordings/${conf_confno}/ 
exten => s,n,Set,MEETME_RECORDINGFILE="${GLOBAL(TMP_BASE_PATH)}/recordings/${conf_confno}/conf_recording_${conf_confno}_${EPOCH}"
exten => s,n,Monitor(wav,${MEETME_RECORDINGFILE},m).   

exten => s,n,GotoIf,$["${conf_permanent}" == "1"]?MMCount  

exten => s,n,GotoIf,$[${EPOCH} < ${conf_start_date}]?NotActive 
exten => s,n,GotoIf,$[${EPOCH} > ${conf_end_date}]?NotActive   
exten => s,n(MMCount),MeetMeCount,${MACRO_EXTEN}|count 
exten => s,n,Noop,"Number of users: "${count}  
exten => s,n,GotoIf,$[${count} >= ${conf_max_users}]?UserLimit 


exten => s,n,Set,row="${REALTIME(banned_conference_users|confno|${MACRO_EXTEN})}"  
exten => s,n,Set,loop=2
exten => s,n(BanLoop),Set,user_pair=${CUT(row|"|"|${loop})}
exten => s,n,Set,username=${CUT(user_pair|"="|2)}  
exten => s,n,Noop,"callerid: "${CALLERID(num)} 
exten => s,n,GotoIf,$["${username}" == "${CALLERID(num)}"]?Banned  
exten => s,n,Set,loop=$[${loop}+2] 
exten => s,n,GotoIf,$["${CUT(row|"|"|${loop})}" != ""]?BanLoop 

exten => s,n,GotoIf,$[0 == ${conf_accesstype}]?Access_Public   
exten => s,n,GotoIf,$[1 == ${conf_accesstype}]?Access_Pin  
exten => s,n,GotoIf,$[2 == ${conf_accesstype}]?Access_List 
exten => s,n,GotoIf,$[3 == ${conf_accesstype}]?Access_PinList  
exten => s,n(Footer),Noop,"Footer reached" 

exten => s,Footer+100(Access_Public),Meetme,${MACRO_EXTEN}|${meetmeflags}|${conf_pin}  
exten => s,n,GotoIf,$["${conf_recorded}" == "1"]?Encode

exten => s,Footer+200(Access_Pin),Meetme,${MACRO_EXTEN}|${meetmeflags} 
exten => s,n,GotoIf,$["${conf_recorded}" == "1"]?Encode

exten => s,Footer+300(Access_List),Noop,"Access List"  


exten => s,n,Set,row="${REALTIME(conference_users|confno|${MACRO_EXTEN})}" 
exten => s,n,Set,loop=2
exten => s,n(UserLoop),Set,user_pair=${CUT(row|"|"|${loop})}   
exten => s,n,Set,username=${CUT(user_pair|"="|2)}  
exten => s,n,Noop,"callerid: "${CALLERID(num)} 
exten => s,n,GotoIf,$["${username}" == "${CALLERID(num)}"]?Access_Public   
exten => s,n,Set,loop=$[${loop}+2] 
exten => s,n,GotoIf,$["${CUT(row|"|"|${loop})}" != ""]?UserLoop
exten => s,n,Gotoif,$[1 == ${pinlist}]?Access_Pin:NotActive

exten => s,Footer+400(Access_PinList),Set,pinlist=1
exten => s,n,Goto(Access_List) 

exten => s,Footer+500(NotExist),Background(conf-invalid)   
exten => s,n,Goto(conference,s,10) 
exten => s,Footer+600(NotActive),Background(conf-locked)   
exten => s,n,Goto(conference,s,10) 
exten => s,Footer+700(UserLimit),Background(conf-thereare) 
exten => s,n,Goto(conference,s,10) 
exten => s,Footer+800(Banned),Background(conf-locked)  
exten => s,n,Goto(conference,s,10) 

exten => s,Footer+900(Encode),Noop,"Encode"
exten => s,n,System,echo "skrypt, ktory zamienia wszystkie wav na mp3 i kasuje wav"

[conference]
switch => Realtime/@

[psnc-sip]
switch => Realtime/@ 
