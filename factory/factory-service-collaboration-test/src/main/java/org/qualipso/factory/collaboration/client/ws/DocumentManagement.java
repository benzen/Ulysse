
package org.qualipso.factory.collaboration.client.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "document-management", targetNamespace = "http://org.qualipso.factory.ws/service/document-management")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DocumentManagement {


    /**
     * 
     * @param document
     * @param parentPath
     * @return
     *     returns java.lang.String
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "path", partName = "path")
    public String createDocument(
        @WebParam(name = "parent-path", partName = "parent-path")
        String parentPath,
        @WebParam(name = "document", partName = "document")
        DocumentDetails document)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param description
     * @param name
     * @param parentPath
     * @return
     *     returns java.lang.String
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "path", partName = "path")
    public String createFolder(
        @WebParam(name = "parent-path", partName = "parent-path")
        String parentPath,
        @WebParam(name = "name", partName = "name")
        String name,
        @WebParam(name = "description", partName = "description")
        String description)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    public void deleteDocument(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    public void deleteFolder(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.FactoryResource
     * @throws FactoryException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    public FactoryResource findResource(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws FactoryException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.ListItemArray
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "list-items", partName = "list-items")
    public ListItemArray getFolderContent(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.DocumentArray
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "documents", partName = "documents")
    public DocumentArray getFolderDocuments(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.StringArray
     */
    @WebMethod
    @WebResult(partName = "return")
    public StringArray getResourceTypeList();

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    public String getServiceName();

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.CollaborationFolderArray
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "collaboration-folders", partName = "collaboration-folders")
    public CollaborationFolderArray getSubfolders(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.Document
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "document", partName = "document")
    public Document readDocument(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.Document
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "document", partName = "document")
    public Document readDocumentProperties(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.CollaborationFolder
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "collaboration-folder", partName = "collaboration-folder")
    public CollaborationFolder readFolder(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param path
     * @return
     *     returns org.qualipso.factory.collaboration.client.ws.CollaborationFolder
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    @WebResult(name = "collaboration-folder", partName = "collaboration-folder")
    public CollaborationFolder readFolderContent(
        @WebParam(name = "path", partName = "path")
        String path)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param keywords
     * @param status
     * @param name
     * @param fileName
     * @param path
     * @param type
     * @param mimeType
     * @param binaryContent
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    public void updateDocument(
        @WebParam(name = "path", partName = "path")
        String path,
        @WebParam(name = "name", partName = "name")
        String name,
        @WebParam(name = "type", partName = "type")
        String type,
        @WebParam(name = "keywords", partName = "keywords")
        String keywords,
        @WebParam(name = "status", partName = "status")
        String status,
        @WebParam(name = "fileName", partName = "fileName")
        String fileName,
        @WebParam(name = "mimeType", partName = "mimeType")
        String mimeType,
        @WebParam(name = "binaryContent", partName = "binaryContent")
        byte[] binaryContent)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param description
     * @param name
     * @param path
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    public void updateFolder(
        @WebParam(name = "path", partName = "path")
        String path,
        @WebParam(name = "name", partName = "name")
        String name,
        @WebParam(name = "description", partName = "description")
        String description)
        throws DocumentServiceException_Exception
    ;

    /**
     * 
     * @param status
     * @param name
     * @param fileName
     * @param path
     * @param mimeType
     * @param binaryContent
     * @param version
     * @throws DocumentServiceException_Exception
     */
    @WebMethod
    public void uploadDocumentVersion(
        @WebParam(name = "path", partName = "path")
        String path,
        @WebParam(name = "name", partName = "name")
        String name,
        @WebParam(name = "version", partName = "version")
        String version,
        @WebParam(name = "status", partName = "status")
        String status,
        @WebParam(name = "fileName", partName = "fileName")
        String fileName,
        @WebParam(name = "mimeType", partName = "mimeType")
        String mimeType,
        @WebParam(name = "binaryContent", partName = "binaryContent")
        byte[] binaryContent)
        throws DocumentServiceException_Exception
    ;

}
